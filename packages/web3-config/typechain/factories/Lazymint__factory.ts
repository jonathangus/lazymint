/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lazymint, LazymintInterface } from "../Lazymint";

const _abi = [
  {
    inputs: [],
    name: "addWatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "watchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063596150d71461003b578063b3c6435f1461006b575b600080fd5b61005560048036038101906100509190610151565b610075565b6040516100629190610199565b60405180910390f35b610073610095565b005b60006020528060005260406000206000915054906101000a900460ff1681565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011e826100f3565b9050919050565b61012e81610113565b811461013957600080fd5b50565b60008135905061014b81610125565b92915050565b600060208284031215610167576101666100ee565b5b60006101758482850161013c565b91505092915050565b60008115159050919050565b6101938161017e565b82525050565b60006020820190506101ae600083018461018a565b9291505056fea2646970667358221220e280514b3ff10b3ba83205b490b6510cd58ddf61343b130bbe81309474ccdb1a64736f6c634300080e0033";

type LazymintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LazymintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lazymint__factory extends ContractFactory {
  constructor(...args: LazymintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lazymint";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lazymint> {
    return super.deploy(overrides || {}) as Promise<Lazymint>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lazymint {
    return super.attach(address) as Lazymint;
  }
  connect(signer: Signer): Lazymint__factory {
    return super.connect(signer) as Lazymint__factory;
  }
  static readonly contractName: "Lazymint";
  public readonly contractName: "Lazymint";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LazymintInterface {
    return new utils.Interface(_abi) as LazymintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lazymint {
    return new Contract(address, _abi, signerOrProvider) as Lazymint;
  }
}
